% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gggenomes.R, R/seqs.R
\name{gggenomes}
\alias{gggenomes}
\alias{layout_genomes}
\alias{layout_seqs}
\title{Plot genomes, features and synteny maps}
\usage{
gggenomes(
  seqs = NULL,
  genes = NULL,
  feats = NULL,
  links = NULL,
  ...,
  theme = c("clean", NULL),
  .layout = NULL
)

layout_genomes(
  seqs = NULL,
  genes = NULL,
  feats = NULL,
  links = NULL,
  infer_bin_id = seq_id,
  infer_start = min(start, end),
  infer_end = max(start, end),
  infer_length = max(start, end),
  ...
)

layout_seqs(
  x,
  spacing = 0.05,
  wrap = NULL,
  spacing_style = c("regular", "center", "spread"),
  keep = "strand"
)
}
\arguments{
\item{seqs}{a table with sequence data (seq_id, bin_id, length)}

\item{genes}{a table or a list of table with gene data to be added as feat
tracks. Required columns: seq_id, bin_id, start, end.

For a single table, adds the track_id will be "genes". For a list,
track_ids are parsed from the list names, or if names are missing from the
name of the variable containing each table.}

\item{feats}{same as genes, but the single table track_id will default to
"feats".}

\item{links}{a table or a list of tables with link data to be added as link
tracks (columns: from, to, from_start, from_end, to_start, to_end). Same
naming scheme as for feats.}

\item{...}{layout parameters passed on to \code{\link[=layout_genomes]{layout_genomes()}} /
\code{\link[=layout_seqs]{layout_seqs()}}}

\item{theme}{choose a gggenomes default theme, NULL to omit.}

\item{.layout}{a pre-computed layout from \code{\link[=layout_genomes]{layout_genomes()}}. Useful for
developmental purposes.}

\item{infer_length, infer_start, infer_end, infer_bin_id}{used to infer pseudo
seqs if only feats or links are provided, or if no bin_id column was
provided. The expressions are evaluated in the context of the first feat
or link track.

By default subregions of sequences from the first to the last feat/link
are generated. Set \code{infer_start} to 0 to show all sequences from their
true beginning.}

\item{spacing}{between sequences in bases (>1) or relative to longest bin (<1)}

\item{wrap}{wrap bins into multiple lines with at most this many nucleotides
per lin.}
}
\value{
gggenomes-flavored ggplot object

gggenomes_layout object
}
\description{
Sequence data: \code{read_fai}
}
\details{
Feat data: \code{read_gff}

Link data: \code{read_paf}
}
\examples{
# Compare the genomic organization of three viral elements
# EMALEs: endogenous mavirus-like elements (example data shipped with gggenomes)
gggenomes(emale_seqs[c(1:2,6),], emale_genes, emale_tirs, emale_links) +
  geom_seq() + geom_bin_label() +                  # chromosomes and labels
  geom_feat(size=8) +                           # terminal inverted repeats
  geom_gene(aes(fill=strand), position="strand") + # genes
  geom_link(offset = 0.15)                         # synteny-blocks

# with some more information
gggenomes(emale_seqs[c(1:6),], emale_genes, emale_tirs, emale_links) \%>\%
  add_feats(emale_transposons, emale_gc) \%>\%
  add_clusters(genes, emale_cogs) \%>\%
  flip_nicely() +
  geom_link(offset = 0.15, color="white") +                        # synteny-blocks
  geom_seq() + geom_bin_label() +                  # chromosomes and labels
  # thistle4, salmon4, burlywood4
  geom_feat(size=6, position="identity") +                              # terminal inverted repeats
  geom_feat(data=feats(emale_transposons), color="turquoise4", alpha=.3,
            position="strand", size=16) +
  geom_feat_note(aes(label=type), data=feats(emale_transposons),
                 position="strand", nudge_y = .3) +
  geom_gene(aes(fill=cluster_label), position="strand") + # genes
  scale_fill_brewer("Conserved genes", palette="Dark2", na.value = "cornsilk3") +
  #scale_fill_viridis_b() +
  geom_ribbon(aes(x=(x+xend)/2, ymax=y+.24, ymin=y+.38-(.4*score),
                  group=seq_id, linetype="GC-content"), feats(emale_gc),
              fill="lavenderblush4", position=position_nudge(y=-.1)) +
  geom_gene_tag(aes(label=capsid), position="strand", xjust=.25, nudge_y = .1, angle=30)
}
