% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_gene.R
\name{geom_gene}
\alias{geom_gene}
\alias{geom_cds}
\alias{geom_cds_hinge}
\alias{geom_gene_gggenes}
\title{Draw genes}
\usage{
geom_gene(mapping = NULL, data = use_genes(type == "CDS"),
  stat = "identity", position = "identity", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, height = 5,
  arrow_width = 75, arrow_height = 5, hinges = TRUE, ...)

geom_cds(mapping = NULL, data = use_genes(type == "CDS"),
  stat = "identity", position = "identity", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, height = 5,
  arrow_width = 100, arrow_height = 5, ...)

geom_cds_hinge(mapping = NULL, data = use_genes(type == "CDS"),
  stat = "identity", position = "identity", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, height = 5, ...)

geom_gene_gggenes(mapping = NULL, data = use(genes),
  nudge_by_strand = NULL, arrowhead_width = grid::unit(2, "mm"),
  arrowhead_height = grid::unit(3, "mm"),
  arrow_body_height = grid::unit(3, "mm"), ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{height, arrow_height, arrow_width}{Dimensions of the arrow-shaped gene
polygon.

Note: In the gggenomes default layout, the distance between two genomes on
the y-axis is 1. Height and arrow_height are specified in percent y-axis
units. Width is expressed in absolute x-axis units, i.e. number of
nucleotides. Due to this parameterization the behave different from common
fixed-size units like size and linewidth, and change dynamically with the
aspect-ratio.These are not fixed-size units like point size, and will change
with the aspect-ratio.}

\item{hinges}{Draw hinges (small lines) between the parts of the CDS present
on different exons.}

\item{...}{Other arguments passed on to \code{\link[=layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{arrowhead_width}{\code{grid::unit()} object giving the width of the
arrowhead.  Defaults to 4 mm. If the gene is drawn smaller than this width,
only the arrowhead will be drawn, compressed to the length of the gene.}

\item{arrowhead_height}{\code{grid::unit()} object giving the height of the
arrowhead.  Defaults to 4 mm.}

\item{arrow_body_height}{\code{grid::unit()} object giving the height of the body
of the arrow. Defaults to 3 mm.}
}
\description{
Draw complex genes models. Supports prefiltering for coding regions (CDS) and
intron-containg genes. `geom_gene()` actually adds two layers, and is a
de-facto shorthand for `geom_cds() + geom_cds_hinge()`, which draw the coding
region polygons and the intronic connection lines,
respectively. `geom_gene_gggenes()` is a slightly reparameterized version of
`geom_gene_arrow()` of the gggenes package.
}
\details{
Befault only features of `type=="CDS" are drawn. If no `type` columns is
provided in the feature table, all feature are considered "CDS". Change the
`data=use_genes(type=="CDS")` parameter to modify this behaviour.

Features with the same `feature_id` are considered to be parts of the same
gene, but on different exons. They will be drawn with connecting lines,
i.e. hinges in between them.

`geom_gene_gggenes()` works conceptionally different form the other gene-ish
geoms. It supports fixed-size height/widths, but does not support multi-exon
genes, and only works with a linear coordinate system.
}
