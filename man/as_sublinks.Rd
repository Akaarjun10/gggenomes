% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sublinks.R
\name{as_sublinks}
\alias{as_sublinks}
\title{Compute a layout for links linking features}
\usage{
as_sublinks(x, seqs, features, ..., everything = TRUE)
}
\arguments{
\item{x}{sublink data convertible to a link layout}

\item{seqs}{the sequence layout the linked features map onto.}

\item{features}{the features the sublinks map onto.}

\item{...}{passed on to `layout_seqs()`}

\item{everything}{set to FALSE to drop optional columns}

\item{transform}{use if features and sublinks are in different coordinate
spaces, i.e. if matching nucleotide-level annotations to protein level
annotations, e.g. genes and protein blast results.}
}
\value{
a tbl_df with plot coordinates
}
\description{
Reads sublinks connecting features such as all-vs-all protein blasts into a
tidy dataframe. sublinks need to be associated with an already added feature
track. The sublinks are internally converted into a regular link track by
mapping the feature-based `start` and `end` coordinates to coordinates
relative to the sequences underlying the linked features.
}
\details{
The only obligatory columns are `feature_id1` & `feature_id2`. Also
recognized are `start1/end1`, `start2/end2` and `strand`.

Note `start` and `end` for every record will be coerced so that `start <
end`. If no `strand` was provided, `strand` will be added and set to "+" for
records that initially had `start1 < end1 == start2 < end2` and "-"
otherwise. If `strand` was provided, `start` and `end` will be reorganized to
conform with `start < end` without any additional effect.
}
